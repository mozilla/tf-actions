name: matrixify
description: Enumerates changed Terraform subdirs for a matrix

inputs:
  default_branch:
    description: "Default Repository Branch (main or master)"
    required: false
    default: "main"
  filter_file:
    description: "Filepaths to include"
    required: false
    default: "*.tf"
  ignore_dir:
    description: "Directories to ignore (pipe-separated)"
    required: false
    default: "ignoreme"
  ignore_path:
    description: "Filepaths to ignore (pipe-separated)"
    required: false
    default: "*.ignore"

outputs:
  matrix:
    description: "Resulting matrix of git-altered directories that contain a $filter_file"
    value: ${{ steps.set-matrix.outputs.matrix }}

runs:
  using: "composite"
  steps:
    - name: Clone Repository
      uses: actions/checkout@v2
    - name: Check changed files
      id: diff
      shell: bash
      run: |
        # "****** CHECK CHANGED FILES ******"

        if [ $GITHUB_BASE_REF ]; then
          # Pull Request (per branch changes)
          git fetch origin $GITHUB_BASE_REF --depth=1
          export DIFF=$( git diff --name-only origin/$GITHUB_BASE_REF $GITHUB_SHA )
          echo "Diff between origin/$GITHUB_BASE_REF and $GITHUB_SHA"
        else
          # Push (per commit changes)
          if [ "${{ github.event.before }}" == "0000000000000000000000000000000000000000" ]; then
            git fetch origin ${{ inputs.default_branch }} --depth=1
            export DIFF=$( git diff --name-only origin/${{ inputs.default_branch }} $GITHUB_SHA )
            echo "Diff between origin/${{ inputs.default_branch }} and $GITHUB_SHA"
          else
            git fetch origin ${{ github.event.before }} --depth=1
            export DIFF=$( git diff --name-only ${{ github.event.before }} $GITHUB_SHA )
            echo "Diff between ${{ github.event.before }} and $GITHUB_SHA"
          fi
        fi

        if [ -z "$DIFF" ]; then
          echo "# No git changes detected, skipping CI" >> $GITHUB_STEP_SUMMARY
        else
          echo "# Git changes detected" >> $GITHUB_STEP_SUMMARY
          echo $DIFF >> $GITHUB_STEP_SUMMARY
        fi

        echo 'diff<<EOF' >> $GITHUB_OUTPUT
        echo $DIFF >> $GITHUB_OUTPUT
        echo 'EOF' >> $GITHUB_OUTPUT
    - name: Set matrix for build
      id: set-matrix
      shell: bash
      run: |
        # "****** SET MATRIX FOR BUILD ******"
        shopt -s extglob

        DIFF="${{ steps.diff.outputs.diff }}"
        
        if [[ "$DIFF" ]]; then
          JSON="{\"include\":["

          # Loop by lines
          while read path; do
            # Set $directory to substring before /
            rootdir="$( echo $path | cut -d'/' -f1 -s )"
            directory="$( dirname $path )"

            # filter out root directory
            # plus any designated dirs or filepaths
            if [ -z "$rootdir" ]; then
              continue # Exclude root directory
            elif [[ "$directory" == @(${{ inputs.ignore_dir }}) ]]; then
              continue
            elif [[ "$path" == @(${{ inputs.ignore_path }}) ]]; then
              continue
            fi

            # ignore files / directories removed by git commits
            if [ ! -d $directory ]; then
              echo "${directory} removed by git changes"
              continue
            fi

            # only include directories containing certain filepaths, e.g. *.tf
            filecheck=(`find $directory -name ${{ inputs.filter_file }} -maxdepth 1`)
            if [ ${#filecheck[@]} == 0 ]; then 
              echo "${directory} has no files matching ${{ inputs.filter_file }}"
              continue
            fi

            # build the JSON used for GHA Matrix jobs
            JSONline="{\"directory\": \"$directory\", \"os\": \"ubuntu-latest\"},"
            if [[ "$JSON" != *"$JSONline"* ]]; then
              JSON="$JSON$JSONline"
            fi
          done <<< "$DIFF"

          # Remove last "," and add closing brackets on Matrix JSON
          if [[ $JSON == *, ]]; then
            JSON="${JSON%?}"
          fi
          JSON="$JSON]}"

          echo "# Matrix set" >> $GITHUB_STEP_SUMMARY
          echo $JSON >> $GITHUB_STEP_SUMMARY

          # Set output
          echo "matrix=$( echo "$JSON" )" >> $GITHUB_OUTPUT
        else
          echo "# No matrix set" >> $GITHUB_STEP_SUMMARY
          JSON="{\"include\":[]}"
          echo "matrix=$( echo "$JSON" )" >> $GITHUB_OUTPUT
        fi
